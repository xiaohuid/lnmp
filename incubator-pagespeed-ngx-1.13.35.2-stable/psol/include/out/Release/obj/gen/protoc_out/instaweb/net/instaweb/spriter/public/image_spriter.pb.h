// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/instaweb/spriter/public/image_spriter.proto

#ifndef PROTOBUF_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto__INCLUDED
#define PROTOBUF_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace net_instaweb {
namespace spriter {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
void protobuf_AssignDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
void protobuf_ShutdownFile_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();

class Image;
class ImagePosition;
class Rect;
class SpriteOptions;
class SpriterInput;
class SpriterResult;

enum PlacementMethod {
  VERTICAL_STRIP = 0
};
bool PlacementMethod_IsValid(int value);
const PlacementMethod PlacementMethod_MIN = VERTICAL_STRIP;
const PlacementMethod PlacementMethod_MAX = VERTICAL_STRIP;
const int PlacementMethod_ARRAYSIZE = PlacementMethod_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlacementMethod_descriptor();
inline const ::std::string& PlacementMethod_Name(PlacementMethod value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlacementMethod_descriptor(), value);
}
inline bool PlacementMethod_Parse(
    const ::std::string& name, PlacementMethod* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlacementMethod>(
    PlacementMethod_descriptor(), name, value);
}
enum ImageFormat {
  PNG = 0,
  JPEG = 1
};
bool ImageFormat_IsValid(int value);
const ImageFormat ImageFormat_MIN = PNG;
const ImageFormat ImageFormat_MAX = JPEG;
const int ImageFormat_ARRAYSIZE = ImageFormat_MAX + 1;

const ::google::protobuf::EnumDescriptor* ImageFormat_descriptor();
inline const ::std::string& ImageFormat_Name(ImageFormat value) {
  return ::google::protobuf::internal::NameOfEnum(
    ImageFormat_descriptor(), value);
}
inline bool ImageFormat_Parse(
    const ::std::string& name, ImageFormat* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ImageFormat>(
    ImageFormat_descriptor(), name, value);
}
// ===================================================================

class Image : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:net_instaweb.spriter.Image) */ {
 public:
  Image();
  virtual ~Image();

  Image(const Image& from);

  inline Image& operator=(const Image& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Image& default_instance();

  void Swap(Image* other);

  // implements Message ----------------------------------------------

  inline Image* New() const { return New(NULL); }

  Image* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Image& from);
  void MergeFrom(const Image& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Image* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:net_instaweb.spriter.Image)
 private:
  inline void set_has_path();
  inline void clear_has_path();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  friend void  protobuf_AddDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  friend void protobuf_AssignDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  friend void protobuf_ShutdownFile_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();

  void InitAsDefaultInstance();
  static Image* default_instance_;
};
// -------------------------------------------------------------------

class SpriteOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:net_instaweb.spriter.SpriteOptions) */ {
 public:
  SpriteOptions();
  virtual ~SpriteOptions();

  SpriteOptions(const SpriteOptions& from);

  inline SpriteOptions& operator=(const SpriteOptions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpriteOptions& default_instance();

  void Swap(SpriteOptions* other);

  // implements Message ----------------------------------------------

  inline SpriteOptions* New() const { return New(NULL); }

  SpriteOptions* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpriteOptions& from);
  void MergeFrom(const SpriteOptions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SpriteOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .net_instaweb.spriter.PlacementMethod placement_method = 1;
  bool has_placement_method() const;
  void clear_placement_method();
  static const int kPlacementMethodFieldNumber = 1;
  ::net_instaweb::spriter::PlacementMethod placement_method() const;
  void set_placement_method(::net_instaweb::spriter::PlacementMethod value);

  // required .net_instaweb.spriter.ImageFormat output_format = 2;
  bool has_output_format() const;
  void clear_output_format();
  static const int kOutputFormatFieldNumber = 2;
  ::net_instaweb::spriter::ImageFormat output_format() const;
  void set_output_format(::net_instaweb::spriter::ImageFormat value);

  // required string input_base_path = 3;
  bool has_input_base_path() const;
  void clear_input_base_path();
  static const int kInputBasePathFieldNumber = 3;
  const ::std::string& input_base_path() const;
  void set_input_base_path(const ::std::string& value);
  void set_input_base_path(const char* value);
  void set_input_base_path(const char* value, size_t size);
  ::std::string* mutable_input_base_path();
  ::std::string* release_input_base_path();
  void set_allocated_input_base_path(::std::string* input_base_path);

  // required string output_base_path = 4;
  bool has_output_base_path() const;
  void clear_output_base_path();
  static const int kOutputBasePathFieldNumber = 4;
  const ::std::string& output_base_path() const;
  void set_output_base_path(const ::std::string& value);
  void set_output_base_path(const char* value);
  void set_output_base_path(const char* value, size_t size);
  ::std::string* mutable_output_base_path();
  ::std::string* release_output_base_path();
  void set_allocated_output_base_path(::std::string* output_base_path);

  // required string output_image_path = 5;
  bool has_output_image_path() const;
  void clear_output_image_path();
  static const int kOutputImagePathFieldNumber = 5;
  const ::std::string& output_image_path() const;
  void set_output_image_path(const ::std::string& value);
  void set_output_image_path(const char* value);
  void set_output_image_path(const char* value, size_t size);
  ::std::string* mutable_output_image_path();
  ::std::string* release_output_image_path();
  void set_allocated_output_image_path(::std::string* output_image_path);

  // @@protoc_insertion_point(class_scope:net_instaweb.spriter.SpriteOptions)
 private:
  inline void set_has_placement_method();
  inline void clear_has_placement_method();
  inline void set_has_output_format();
  inline void clear_has_output_format();
  inline void set_has_input_base_path();
  inline void clear_has_input_base_path();
  inline void set_has_output_base_path();
  inline void clear_has_output_base_path();
  inline void set_has_output_image_path();
  inline void clear_has_output_image_path();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int placement_method_;
  int output_format_;
  ::google::protobuf::internal::ArenaStringPtr input_base_path_;
  ::google::protobuf::internal::ArenaStringPtr output_base_path_;
  ::google::protobuf::internal::ArenaStringPtr output_image_path_;
  friend void  protobuf_AddDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  friend void protobuf_AssignDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  friend void protobuf_ShutdownFile_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();

  void InitAsDefaultInstance();
  static SpriteOptions* default_instance_;
};
// -------------------------------------------------------------------

class SpriterInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:net_instaweb.spriter.SpriterInput) */ {
 public:
  SpriterInput();
  virtual ~SpriterInput();

  SpriterInput(const SpriterInput& from);

  inline SpriterInput& operator=(const SpriterInput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpriterInput& default_instance();

  void Swap(SpriterInput* other);

  // implements Message ----------------------------------------------

  inline SpriterInput* New() const { return New(NULL); }

  SpriterInput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpriterInput& from);
  void MergeFrom(const SpriterInput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SpriterInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1 [default = 0];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required .net_instaweb.spriter.SpriteOptions options = 2;
  bool has_options() const;
  void clear_options();
  static const int kOptionsFieldNumber = 2;
  const ::net_instaweb::spriter::SpriteOptions& options() const;
  ::net_instaweb::spriter::SpriteOptions* mutable_options();
  ::net_instaweb::spriter::SpriteOptions* release_options();
  void set_allocated_options(::net_instaweb::spriter::SpriteOptions* options);

  // repeated .net_instaweb.spriter.Image input_image_set = 3;
  int input_image_set_size() const;
  void clear_input_image_set();
  static const int kInputImageSetFieldNumber = 3;
  const ::net_instaweb::spriter::Image& input_image_set(int index) const;
  ::net_instaweb::spriter::Image* mutable_input_image_set(int index);
  ::net_instaweb::spriter::Image* add_input_image_set();
  ::google::protobuf::RepeatedPtrField< ::net_instaweb::spriter::Image >*
      mutable_input_image_set();
  const ::google::protobuf::RepeatedPtrField< ::net_instaweb::spriter::Image >&
      input_image_set() const;

  // @@protoc_insertion_point(class_scope:net_instaweb.spriter.SpriterInput)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::net_instaweb::spriter::SpriteOptions* options_;
  ::google::protobuf::RepeatedPtrField< ::net_instaweb::spriter::Image > input_image_set_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  friend void protobuf_AssignDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  friend void protobuf_ShutdownFile_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();

  void InitAsDefaultInstance();
  static SpriterInput* default_instance_;
};
// -------------------------------------------------------------------

class Rect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:net_instaweb.spriter.Rect) */ {
 public:
  Rect();
  virtual ~Rect();

  Rect(const Rect& from);

  inline Rect& operator=(const Rect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Rect& default_instance();

  void Swap(Rect* other);

  // implements Message ----------------------------------------------

  inline Rect* New() const { return New(NULL); }

  Rect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Rect& from);
  void MergeFrom(const Rect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Rect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 x_pos = 1;
  bool has_x_pos() const;
  void clear_x_pos();
  static const int kXPosFieldNumber = 1;
  ::google::protobuf::int32 x_pos() const;
  void set_x_pos(::google::protobuf::int32 value);

  // required int32 y_pos = 2;
  bool has_y_pos() const;
  void clear_y_pos();
  static const int kYPosFieldNumber = 2;
  ::google::protobuf::int32 y_pos() const;
  void set_y_pos(::google::protobuf::int32 value);

  // required int32 width = 3;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // required int32 height = 4;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:net_instaweb.spriter.Rect)
 private:
  inline void set_has_x_pos();
  inline void clear_has_x_pos();
  inline void set_has_y_pos();
  inline void clear_has_y_pos();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 x_pos_;
  ::google::protobuf::int32 y_pos_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  friend void  protobuf_AddDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  friend void protobuf_AssignDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  friend void protobuf_ShutdownFile_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();

  void InitAsDefaultInstance();
  static Rect* default_instance_;
};
// -------------------------------------------------------------------

class ImagePosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:net_instaweb.spriter.ImagePosition) */ {
 public:
  ImagePosition();
  virtual ~ImagePosition();

  ImagePosition(const ImagePosition& from);

  inline ImagePosition& operator=(const ImagePosition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImagePosition& default_instance();

  void Swap(ImagePosition* other);

  // implements Message ----------------------------------------------

  inline ImagePosition* New() const { return New(NULL); }

  ImagePosition* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImagePosition& from);
  void MergeFrom(const ImagePosition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImagePosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // required .net_instaweb.spriter.Rect clip_rect = 2;
  bool has_clip_rect() const;
  void clear_clip_rect();
  static const int kClipRectFieldNumber = 2;
  const ::net_instaweb::spriter::Rect& clip_rect() const;
  ::net_instaweb::spriter::Rect* mutable_clip_rect();
  ::net_instaweb::spriter::Rect* release_clip_rect();
  void set_allocated_clip_rect(::net_instaweb::spriter::Rect* clip_rect);

  // @@protoc_insertion_point(class_scope:net_instaweb.spriter.ImagePosition)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_clip_rect();
  inline void clear_has_clip_rect();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::net_instaweb::spriter::Rect* clip_rect_;
  friend void  protobuf_AddDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  friend void protobuf_AssignDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  friend void protobuf_ShutdownFile_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();

  void InitAsDefaultInstance();
  static ImagePosition* default_instance_;
};
// -------------------------------------------------------------------

class SpriterResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:net_instaweb.spriter.SpriterResult) */ {
 public:
  SpriterResult();
  virtual ~SpriterResult();

  SpriterResult(const SpriterResult& from);

  inline SpriterResult& operator=(const SpriterResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpriterResult& default_instance();

  void Swap(SpriterResult* other);

  // implements Message ----------------------------------------------

  inline SpriterResult* New() const { return New(NULL); }

  SpriterResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpriterResult& from);
  void MergeFrom(const SpriterResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SpriterResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required string output_base_path = 2;
  bool has_output_base_path() const;
  void clear_output_base_path();
  static const int kOutputBasePathFieldNumber = 2;
  const ::std::string& output_base_path() const;
  void set_output_base_path(const ::std::string& value);
  void set_output_base_path(const char* value);
  void set_output_base_path(const char* value, size_t size);
  ::std::string* mutable_output_base_path();
  ::std::string* release_output_base_path();
  void set_allocated_output_base_path(::std::string* output_base_path);

  // required string output_image_path = 3;
  bool has_output_image_path() const;
  void clear_output_image_path();
  static const int kOutputImagePathFieldNumber = 3;
  const ::std::string& output_image_path() const;
  void set_output_image_path(const ::std::string& value);
  void set_output_image_path(const char* value);
  void set_output_image_path(const char* value, size_t size);
  ::std::string* mutable_output_image_path();
  ::std::string* release_output_image_path();
  void set_allocated_output_image_path(::std::string* output_image_path);

  // repeated .net_instaweb.spriter.ImagePosition image_position = 4;
  int image_position_size() const;
  void clear_image_position();
  static const int kImagePositionFieldNumber = 4;
  const ::net_instaweb::spriter::ImagePosition& image_position(int index) const;
  ::net_instaweb::spriter::ImagePosition* mutable_image_position(int index);
  ::net_instaweb::spriter::ImagePosition* add_image_position();
  ::google::protobuf::RepeatedPtrField< ::net_instaweb::spriter::ImagePosition >*
      mutable_image_position();
  const ::google::protobuf::RepeatedPtrField< ::net_instaweb::spriter::ImagePosition >&
      image_position() const;

  // @@protoc_insertion_point(class_scope:net_instaweb.spriter.SpriterResult)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_output_base_path();
  inline void clear_has_output_base_path();
  inline void set_has_output_image_path();
  inline void clear_has_output_image_path();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr output_base_path_;
  ::google::protobuf::internal::ArenaStringPtr output_image_path_;
  ::google::protobuf::RepeatedPtrField< ::net_instaweb::spriter::ImagePosition > image_position_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  friend void protobuf_AssignDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  friend void protobuf_ShutdownFile_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();

  void InitAsDefaultInstance();
  static SpriterResult* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Image

// required string path = 1;
inline bool Image::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Image::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Image::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Image::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& Image::path() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.Image.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Image::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.Image.path)
}
inline void Image::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.spriter.Image.path)
}
inline void Image::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.spriter.Image.path)
}
inline ::std::string* Image::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.Image.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Image::release_path() {
  // @@protoc_insertion_point(field_release:net_instaweb.spriter.Image.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Image::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.spriter.Image.path)
}

// -------------------------------------------------------------------

// SpriteOptions

// required .net_instaweb.spriter.PlacementMethod placement_method = 1;
inline bool SpriteOptions::has_placement_method() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpriteOptions::set_has_placement_method() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpriteOptions::clear_has_placement_method() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpriteOptions::clear_placement_method() {
  placement_method_ = 0;
  clear_has_placement_method();
}
inline ::net_instaweb::spriter::PlacementMethod SpriteOptions::placement_method() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriteOptions.placement_method)
  return static_cast< ::net_instaweb::spriter::PlacementMethod >(placement_method_);
}
inline void SpriteOptions::set_placement_method(::net_instaweb::spriter::PlacementMethod value) {
  assert(::net_instaweb::spriter::PlacementMethod_IsValid(value));
  set_has_placement_method();
  placement_method_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.SpriteOptions.placement_method)
}

// required .net_instaweb.spriter.ImageFormat output_format = 2;
inline bool SpriteOptions::has_output_format() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpriteOptions::set_has_output_format() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpriteOptions::clear_has_output_format() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpriteOptions::clear_output_format() {
  output_format_ = 0;
  clear_has_output_format();
}
inline ::net_instaweb::spriter::ImageFormat SpriteOptions::output_format() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriteOptions.output_format)
  return static_cast< ::net_instaweb::spriter::ImageFormat >(output_format_);
}
inline void SpriteOptions::set_output_format(::net_instaweb::spriter::ImageFormat value) {
  assert(::net_instaweb::spriter::ImageFormat_IsValid(value));
  set_has_output_format();
  output_format_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.SpriteOptions.output_format)
}

// required string input_base_path = 3;
inline bool SpriteOptions::has_input_base_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SpriteOptions::set_has_input_base_path() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SpriteOptions::clear_has_input_base_path() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SpriteOptions::clear_input_base_path() {
  input_base_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_input_base_path();
}
inline const ::std::string& SpriteOptions::input_base_path() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriteOptions.input_base_path)
  return input_base_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpriteOptions::set_input_base_path(const ::std::string& value) {
  set_has_input_base_path();
  input_base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.SpriteOptions.input_base_path)
}
inline void SpriteOptions::set_input_base_path(const char* value) {
  set_has_input_base_path();
  input_base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.spriter.SpriteOptions.input_base_path)
}
inline void SpriteOptions::set_input_base_path(const char* value, size_t size) {
  set_has_input_base_path();
  input_base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.spriter.SpriteOptions.input_base_path)
}
inline ::std::string* SpriteOptions::mutable_input_base_path() {
  set_has_input_base_path();
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.SpriteOptions.input_base_path)
  return input_base_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SpriteOptions::release_input_base_path() {
  // @@protoc_insertion_point(field_release:net_instaweb.spriter.SpriteOptions.input_base_path)
  clear_has_input_base_path();
  return input_base_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpriteOptions::set_allocated_input_base_path(::std::string* input_base_path) {
  if (input_base_path != NULL) {
    set_has_input_base_path();
  } else {
    clear_has_input_base_path();
  }
  input_base_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_base_path);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.spriter.SpriteOptions.input_base_path)
}

// required string output_base_path = 4;
inline bool SpriteOptions::has_output_base_path() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SpriteOptions::set_has_output_base_path() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SpriteOptions::clear_has_output_base_path() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SpriteOptions::clear_output_base_path() {
  output_base_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_output_base_path();
}
inline const ::std::string& SpriteOptions::output_base_path() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriteOptions.output_base_path)
  return output_base_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpriteOptions::set_output_base_path(const ::std::string& value) {
  set_has_output_base_path();
  output_base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.SpriteOptions.output_base_path)
}
inline void SpriteOptions::set_output_base_path(const char* value) {
  set_has_output_base_path();
  output_base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.spriter.SpriteOptions.output_base_path)
}
inline void SpriteOptions::set_output_base_path(const char* value, size_t size) {
  set_has_output_base_path();
  output_base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.spriter.SpriteOptions.output_base_path)
}
inline ::std::string* SpriteOptions::mutable_output_base_path() {
  set_has_output_base_path();
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.SpriteOptions.output_base_path)
  return output_base_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SpriteOptions::release_output_base_path() {
  // @@protoc_insertion_point(field_release:net_instaweb.spriter.SpriteOptions.output_base_path)
  clear_has_output_base_path();
  return output_base_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpriteOptions::set_allocated_output_base_path(::std::string* output_base_path) {
  if (output_base_path != NULL) {
    set_has_output_base_path();
  } else {
    clear_has_output_base_path();
  }
  output_base_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_base_path);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.spriter.SpriteOptions.output_base_path)
}

// required string output_image_path = 5;
inline bool SpriteOptions::has_output_image_path() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SpriteOptions::set_has_output_image_path() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SpriteOptions::clear_has_output_image_path() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SpriteOptions::clear_output_image_path() {
  output_image_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_output_image_path();
}
inline const ::std::string& SpriteOptions::output_image_path() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriteOptions.output_image_path)
  return output_image_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpriteOptions::set_output_image_path(const ::std::string& value) {
  set_has_output_image_path();
  output_image_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.SpriteOptions.output_image_path)
}
inline void SpriteOptions::set_output_image_path(const char* value) {
  set_has_output_image_path();
  output_image_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.spriter.SpriteOptions.output_image_path)
}
inline void SpriteOptions::set_output_image_path(const char* value, size_t size) {
  set_has_output_image_path();
  output_image_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.spriter.SpriteOptions.output_image_path)
}
inline ::std::string* SpriteOptions::mutable_output_image_path() {
  set_has_output_image_path();
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.SpriteOptions.output_image_path)
  return output_image_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SpriteOptions::release_output_image_path() {
  // @@protoc_insertion_point(field_release:net_instaweb.spriter.SpriteOptions.output_image_path)
  clear_has_output_image_path();
  return output_image_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpriteOptions::set_allocated_output_image_path(::std::string* output_image_path) {
  if (output_image_path != NULL) {
    set_has_output_image_path();
  } else {
    clear_has_output_image_path();
  }
  output_image_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_image_path);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.spriter.SpriteOptions.output_image_path)
}

// -------------------------------------------------------------------

// SpriterInput

// optional int32 id = 1 [default = 0];
inline bool SpriterInput::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpriterInput::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpriterInput::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpriterInput::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SpriterInput::id() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriterInput.id)
  return id_;
}
inline void SpriterInput::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.SpriterInput.id)
}

// required .net_instaweb.spriter.SpriteOptions options = 2;
inline bool SpriterInput::has_options() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpriterInput::set_has_options() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpriterInput::clear_has_options() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpriterInput::clear_options() {
  if (options_ != NULL) options_->::net_instaweb::spriter::SpriteOptions::Clear();
  clear_has_options();
}
inline const ::net_instaweb::spriter::SpriteOptions& SpriterInput::options() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriterInput.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::net_instaweb::spriter::SpriteOptions* SpriterInput::mutable_options() {
  set_has_options();
  if (options_ == NULL) {
    options_ = new ::net_instaweb::spriter::SpriteOptions;
  }
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.SpriterInput.options)
  return options_;
}
inline ::net_instaweb::spriter::SpriteOptions* SpriterInput::release_options() {
  // @@protoc_insertion_point(field_release:net_instaweb.spriter.SpriterInput.options)
  clear_has_options();
  ::net_instaweb::spriter::SpriteOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void SpriterInput::set_allocated_options(::net_instaweb::spriter::SpriteOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.spriter.SpriterInput.options)
}

// repeated .net_instaweb.spriter.Image input_image_set = 3;
inline int SpriterInput::input_image_set_size() const {
  return input_image_set_.size();
}
inline void SpriterInput::clear_input_image_set() {
  input_image_set_.Clear();
}
inline const ::net_instaweb::spriter::Image& SpriterInput::input_image_set(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriterInput.input_image_set)
  return input_image_set_.Get(index);
}
inline ::net_instaweb::spriter::Image* SpriterInput::mutable_input_image_set(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.SpriterInput.input_image_set)
  return input_image_set_.Mutable(index);
}
inline ::net_instaweb::spriter::Image* SpriterInput::add_input_image_set() {
  // @@protoc_insertion_point(field_add:net_instaweb.spriter.SpriterInput.input_image_set)
  return input_image_set_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::net_instaweb::spriter::Image >*
SpriterInput::mutable_input_image_set() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.spriter.SpriterInput.input_image_set)
  return &input_image_set_;
}
inline const ::google::protobuf::RepeatedPtrField< ::net_instaweb::spriter::Image >&
SpriterInput::input_image_set() const {
  // @@protoc_insertion_point(field_list:net_instaweb.spriter.SpriterInput.input_image_set)
  return input_image_set_;
}

// -------------------------------------------------------------------

// Rect

// required int32 x_pos = 1;
inline bool Rect::has_x_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Rect::set_has_x_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Rect::clear_has_x_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Rect::clear_x_pos() {
  x_pos_ = 0;
  clear_has_x_pos();
}
inline ::google::protobuf::int32 Rect::x_pos() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.Rect.x_pos)
  return x_pos_;
}
inline void Rect::set_x_pos(::google::protobuf::int32 value) {
  set_has_x_pos();
  x_pos_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.Rect.x_pos)
}

// required int32 y_pos = 2;
inline bool Rect::has_y_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Rect::set_has_y_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Rect::clear_has_y_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Rect::clear_y_pos() {
  y_pos_ = 0;
  clear_has_y_pos();
}
inline ::google::protobuf::int32 Rect::y_pos() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.Rect.y_pos)
  return y_pos_;
}
inline void Rect::set_y_pos(::google::protobuf::int32 value) {
  set_has_y_pos();
  y_pos_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.Rect.y_pos)
}

// required int32 width = 3;
inline bool Rect::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Rect::set_has_width() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Rect::clear_has_width() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Rect::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 Rect::width() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.Rect.width)
  return width_;
}
inline void Rect::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.Rect.width)
}

// required int32 height = 4;
inline bool Rect::has_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Rect::set_has_height() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Rect::clear_has_height() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Rect::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 Rect::height() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.Rect.height)
  return height_;
}
inline void Rect::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.Rect.height)
}

// -------------------------------------------------------------------

// ImagePosition

// required string path = 1;
inline bool ImagePosition::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImagePosition::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImagePosition::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImagePosition::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& ImagePosition::path() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.ImagePosition.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImagePosition::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.ImagePosition.path)
}
inline void ImagePosition::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.spriter.ImagePosition.path)
}
inline void ImagePosition::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.spriter.ImagePosition.path)
}
inline ::std::string* ImagePosition::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.ImagePosition.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImagePosition::release_path() {
  // @@protoc_insertion_point(field_release:net_instaweb.spriter.ImagePosition.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImagePosition::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.spriter.ImagePosition.path)
}

// required .net_instaweb.spriter.Rect clip_rect = 2;
inline bool ImagePosition::has_clip_rect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImagePosition::set_has_clip_rect() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImagePosition::clear_has_clip_rect() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImagePosition::clear_clip_rect() {
  if (clip_rect_ != NULL) clip_rect_->::net_instaweb::spriter::Rect::Clear();
  clear_has_clip_rect();
}
inline const ::net_instaweb::spriter::Rect& ImagePosition::clip_rect() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.ImagePosition.clip_rect)
  return clip_rect_ != NULL ? *clip_rect_ : *default_instance_->clip_rect_;
}
inline ::net_instaweb::spriter::Rect* ImagePosition::mutable_clip_rect() {
  set_has_clip_rect();
  if (clip_rect_ == NULL) {
    clip_rect_ = new ::net_instaweb::spriter::Rect;
  }
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.ImagePosition.clip_rect)
  return clip_rect_;
}
inline ::net_instaweb::spriter::Rect* ImagePosition::release_clip_rect() {
  // @@protoc_insertion_point(field_release:net_instaweb.spriter.ImagePosition.clip_rect)
  clear_has_clip_rect();
  ::net_instaweb::spriter::Rect* temp = clip_rect_;
  clip_rect_ = NULL;
  return temp;
}
inline void ImagePosition::set_allocated_clip_rect(::net_instaweb::spriter::Rect* clip_rect) {
  delete clip_rect_;
  clip_rect_ = clip_rect;
  if (clip_rect) {
    set_has_clip_rect();
  } else {
    clear_has_clip_rect();
  }
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.spriter.ImagePosition.clip_rect)
}

// -------------------------------------------------------------------

// SpriterResult

// required int32 id = 1;
inline bool SpriterResult::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpriterResult::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpriterResult::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpriterResult::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SpriterResult::id() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriterResult.id)
  return id_;
}
inline void SpriterResult::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.SpriterResult.id)
}

// required string output_base_path = 2;
inline bool SpriterResult::has_output_base_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpriterResult::set_has_output_base_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpriterResult::clear_has_output_base_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpriterResult::clear_output_base_path() {
  output_base_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_output_base_path();
}
inline const ::std::string& SpriterResult::output_base_path() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriterResult.output_base_path)
  return output_base_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpriterResult::set_output_base_path(const ::std::string& value) {
  set_has_output_base_path();
  output_base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.SpriterResult.output_base_path)
}
inline void SpriterResult::set_output_base_path(const char* value) {
  set_has_output_base_path();
  output_base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.spriter.SpriterResult.output_base_path)
}
inline void SpriterResult::set_output_base_path(const char* value, size_t size) {
  set_has_output_base_path();
  output_base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.spriter.SpriterResult.output_base_path)
}
inline ::std::string* SpriterResult::mutable_output_base_path() {
  set_has_output_base_path();
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.SpriterResult.output_base_path)
  return output_base_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SpriterResult::release_output_base_path() {
  // @@protoc_insertion_point(field_release:net_instaweb.spriter.SpriterResult.output_base_path)
  clear_has_output_base_path();
  return output_base_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpriterResult::set_allocated_output_base_path(::std::string* output_base_path) {
  if (output_base_path != NULL) {
    set_has_output_base_path();
  } else {
    clear_has_output_base_path();
  }
  output_base_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_base_path);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.spriter.SpriterResult.output_base_path)
}

// required string output_image_path = 3;
inline bool SpriterResult::has_output_image_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SpriterResult::set_has_output_image_path() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SpriterResult::clear_has_output_image_path() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SpriterResult::clear_output_image_path() {
  output_image_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_output_image_path();
}
inline const ::std::string& SpriterResult::output_image_path() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriterResult.output_image_path)
  return output_image_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpriterResult::set_output_image_path(const ::std::string& value) {
  set_has_output_image_path();
  output_image_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.SpriterResult.output_image_path)
}
inline void SpriterResult::set_output_image_path(const char* value) {
  set_has_output_image_path();
  output_image_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.spriter.SpriterResult.output_image_path)
}
inline void SpriterResult::set_output_image_path(const char* value, size_t size) {
  set_has_output_image_path();
  output_image_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.spriter.SpriterResult.output_image_path)
}
inline ::std::string* SpriterResult::mutable_output_image_path() {
  set_has_output_image_path();
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.SpriterResult.output_image_path)
  return output_image_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SpriterResult::release_output_image_path() {
  // @@protoc_insertion_point(field_release:net_instaweb.spriter.SpriterResult.output_image_path)
  clear_has_output_image_path();
  return output_image_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpriterResult::set_allocated_output_image_path(::std::string* output_image_path) {
  if (output_image_path != NULL) {
    set_has_output_image_path();
  } else {
    clear_has_output_image_path();
  }
  output_image_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_image_path);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.spriter.SpriterResult.output_image_path)
}

// repeated .net_instaweb.spriter.ImagePosition image_position = 4;
inline int SpriterResult::image_position_size() const {
  return image_position_.size();
}
inline void SpriterResult::clear_image_position() {
  image_position_.Clear();
}
inline const ::net_instaweb::spriter::ImagePosition& SpriterResult::image_position(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriterResult.image_position)
  return image_position_.Get(index);
}
inline ::net_instaweb::spriter::ImagePosition* SpriterResult::mutable_image_position(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.SpriterResult.image_position)
  return image_position_.Mutable(index);
}
inline ::net_instaweb::spriter::ImagePosition* SpriterResult::add_image_position() {
  // @@protoc_insertion_point(field_add:net_instaweb.spriter.SpriterResult.image_position)
  return image_position_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::net_instaweb::spriter::ImagePosition >*
SpriterResult::mutable_image_position() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.spriter.SpriterResult.image_position)
  return &image_position_;
}
inline const ::google::protobuf::RepeatedPtrField< ::net_instaweb::spriter::ImagePosition >&
SpriterResult::image_position() const {
  // @@protoc_insertion_point(field_list:net_instaweb.spriter.SpriterResult.image_position)
  return image_position_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace spriter
}  // namespace net_instaweb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::net_instaweb::spriter::PlacementMethod> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::net_instaweb::spriter::PlacementMethod>() {
  return ::net_instaweb::spriter::PlacementMethod_descriptor();
}
template <> struct is_proto_enum< ::net_instaweb::spriter::ImageFormat> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::net_instaweb::spriter::ImageFormat>() {
  return ::net_instaweb::spriter::ImageFormat_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto__INCLUDED
