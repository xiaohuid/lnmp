// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pagespeed/controller/controller.proto

#ifndef PROTOBUF_pagespeed_2fcontroller_2fcontroller_2eproto__INCLUDED
#define PROTOBUF_pagespeed_2fcontroller_2fcontroller_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace net_instaweb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_pagespeed_2fcontroller_2fcontroller_2eproto();
void protobuf_AssignDesc_pagespeed_2fcontroller_2fcontroller_2eproto();
void protobuf_ShutdownFile_pagespeed_2fcontroller_2fcontroller_2eproto();

class ScheduleExpensiveOperationRequest;
class ScheduleExpensiveOperationResponse;
class ScheduleRewriteRequest;
class ScheduleRewriteResponse;

enum ScheduleRewriteRequest_RewriteStatus {
  ScheduleRewriteRequest_RewriteStatus_PENDING = 0,
  ScheduleRewriteRequest_RewriteStatus_SUCCESS = 1,
  ScheduleRewriteRequest_RewriteStatus_FAILED = 2,
  ScheduleRewriteRequest_RewriteStatus_ScheduleRewriteRequest_RewriteStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ScheduleRewriteRequest_RewriteStatus_ScheduleRewriteRequest_RewriteStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ScheduleRewriteRequest_RewriteStatus_IsValid(int value);
const ScheduleRewriteRequest_RewriteStatus ScheduleRewriteRequest_RewriteStatus_RewriteStatus_MIN = ScheduleRewriteRequest_RewriteStatus_PENDING;
const ScheduleRewriteRequest_RewriteStatus ScheduleRewriteRequest_RewriteStatus_RewriteStatus_MAX = ScheduleRewriteRequest_RewriteStatus_FAILED;
const int ScheduleRewriteRequest_RewriteStatus_RewriteStatus_ARRAYSIZE = ScheduleRewriteRequest_RewriteStatus_RewriteStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* ScheduleRewriteRequest_RewriteStatus_descriptor();
inline const ::std::string& ScheduleRewriteRequest_RewriteStatus_Name(ScheduleRewriteRequest_RewriteStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    ScheduleRewriteRequest_RewriteStatus_descriptor(), value);
}
inline bool ScheduleRewriteRequest_RewriteStatus_Parse(
    const ::std::string& name, ScheduleRewriteRequest_RewriteStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ScheduleRewriteRequest_RewriteStatus>(
    ScheduleRewriteRequest_RewriteStatus_descriptor(), name, value);
}
// ===================================================================

class ScheduleRewriteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:net_instaweb.ScheduleRewriteRequest) */ {
 public:
  ScheduleRewriteRequest();
  virtual ~ScheduleRewriteRequest();

  ScheduleRewriteRequest(const ScheduleRewriteRequest& from);

  inline ScheduleRewriteRequest& operator=(const ScheduleRewriteRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScheduleRewriteRequest& default_instance();

  void Swap(ScheduleRewriteRequest* other);

  // implements Message ----------------------------------------------

  inline ScheduleRewriteRequest* New() const { return New(NULL); }

  ScheduleRewriteRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScheduleRewriteRequest& from);
  void MergeFrom(const ScheduleRewriteRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ScheduleRewriteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ScheduleRewriteRequest_RewriteStatus RewriteStatus;
  static const RewriteStatus PENDING =
    ScheduleRewriteRequest_RewriteStatus_PENDING;
  static const RewriteStatus SUCCESS =
    ScheduleRewriteRequest_RewriteStatus_SUCCESS;
  static const RewriteStatus FAILED =
    ScheduleRewriteRequest_RewriteStatus_FAILED;
  static inline bool RewriteStatus_IsValid(int value) {
    return ScheduleRewriteRequest_RewriteStatus_IsValid(value);
  }
  static const RewriteStatus RewriteStatus_MIN =
    ScheduleRewriteRequest_RewriteStatus_RewriteStatus_MIN;
  static const RewriteStatus RewriteStatus_MAX =
    ScheduleRewriteRequest_RewriteStatus_RewriteStatus_MAX;
  static const int RewriteStatus_ARRAYSIZE =
    ScheduleRewriteRequest_RewriteStatus_RewriteStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RewriteStatus_descriptor() {
    return ScheduleRewriteRequest_RewriteStatus_descriptor();
  }
  static inline const ::std::string& RewriteStatus_Name(RewriteStatus value) {
    return ScheduleRewriteRequest_RewriteStatus_Name(value);
  }
  static inline bool RewriteStatus_Parse(const ::std::string& name,
      RewriteStatus* value) {
    return ScheduleRewriteRequest_RewriteStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional .net_instaweb.ScheduleRewriteRequest.RewriteStatus status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::net_instaweb::ScheduleRewriteRequest_RewriteStatus status() const;
  void set_status(::net_instaweb::ScheduleRewriteRequest_RewriteStatus value);

  // @@protoc_insertion_point(class_scope:net_instaweb.ScheduleRewriteRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  int status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_pagespeed_2fcontroller_2fcontroller_2eproto();
  friend void protobuf_AssignDesc_pagespeed_2fcontroller_2fcontroller_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_2fcontroller_2fcontroller_2eproto();

  void InitAsDefaultInstance();
  static ScheduleRewriteRequest* default_instance_;
};
// -------------------------------------------------------------------

class ScheduleRewriteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:net_instaweb.ScheduleRewriteResponse) */ {
 public:
  ScheduleRewriteResponse();
  virtual ~ScheduleRewriteResponse();

  ScheduleRewriteResponse(const ScheduleRewriteResponse& from);

  inline ScheduleRewriteResponse& operator=(const ScheduleRewriteResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScheduleRewriteResponse& default_instance();

  void Swap(ScheduleRewriteResponse* other);

  // implements Message ----------------------------------------------

  inline ScheduleRewriteResponse* New() const { return New(NULL); }

  ScheduleRewriteResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScheduleRewriteResponse& from);
  void MergeFrom(const ScheduleRewriteResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ScheduleRewriteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool ok_to_proceed = 1;
  void clear_ok_to_proceed();
  static const int kOkToProceedFieldNumber = 1;
  bool ok_to_proceed() const;
  void set_ok_to_proceed(bool value);

  // @@protoc_insertion_point(class_scope:net_instaweb.ScheduleRewriteResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  bool ok_to_proceed_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_pagespeed_2fcontroller_2fcontroller_2eproto();
  friend void protobuf_AssignDesc_pagespeed_2fcontroller_2fcontroller_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_2fcontroller_2fcontroller_2eproto();

  void InitAsDefaultInstance();
  static ScheduleRewriteResponse* default_instance_;
};
// -------------------------------------------------------------------

class ScheduleExpensiveOperationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:net_instaweb.ScheduleExpensiveOperationRequest) */ {
 public:
  ScheduleExpensiveOperationRequest();
  virtual ~ScheduleExpensiveOperationRequest();

  ScheduleExpensiveOperationRequest(const ScheduleExpensiveOperationRequest& from);

  inline ScheduleExpensiveOperationRequest& operator=(const ScheduleExpensiveOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScheduleExpensiveOperationRequest& default_instance();

  void Swap(ScheduleExpensiveOperationRequest* other);

  // implements Message ----------------------------------------------

  inline ScheduleExpensiveOperationRequest* New() const { return New(NULL); }

  ScheduleExpensiveOperationRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScheduleExpensiveOperationRequest& from);
  void MergeFrom(const ScheduleExpensiveOperationRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ScheduleExpensiveOperationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:net_instaweb.ScheduleExpensiveOperationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_pagespeed_2fcontroller_2fcontroller_2eproto();
  friend void protobuf_AssignDesc_pagespeed_2fcontroller_2fcontroller_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_2fcontroller_2fcontroller_2eproto();

  void InitAsDefaultInstance();
  static ScheduleExpensiveOperationRequest* default_instance_;
};
// -------------------------------------------------------------------

class ScheduleExpensiveOperationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:net_instaweb.ScheduleExpensiveOperationResponse) */ {
 public:
  ScheduleExpensiveOperationResponse();
  virtual ~ScheduleExpensiveOperationResponse();

  ScheduleExpensiveOperationResponse(const ScheduleExpensiveOperationResponse& from);

  inline ScheduleExpensiveOperationResponse& operator=(const ScheduleExpensiveOperationResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScheduleExpensiveOperationResponse& default_instance();

  void Swap(ScheduleExpensiveOperationResponse* other);

  // implements Message ----------------------------------------------

  inline ScheduleExpensiveOperationResponse* New() const { return New(NULL); }

  ScheduleExpensiveOperationResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScheduleExpensiveOperationResponse& from);
  void MergeFrom(const ScheduleExpensiveOperationResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ScheduleExpensiveOperationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool ok_to_proceed = 1;
  void clear_ok_to_proceed();
  static const int kOkToProceedFieldNumber = 1;
  bool ok_to_proceed() const;
  void set_ok_to_proceed(bool value);

  // @@protoc_insertion_point(class_scope:net_instaweb.ScheduleExpensiveOperationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  bool ok_to_proceed_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_pagespeed_2fcontroller_2fcontroller_2eproto();
  friend void protobuf_AssignDesc_pagespeed_2fcontroller_2fcontroller_2eproto();
  friend void protobuf_ShutdownFile_pagespeed_2fcontroller_2fcontroller_2eproto();

  void InitAsDefaultInstance();
  static ScheduleExpensiveOperationResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ScheduleRewriteRequest

// optional string key = 1;
inline void ScheduleRewriteRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScheduleRewriteRequest::key() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ScheduleRewriteRequest.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScheduleRewriteRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.ScheduleRewriteRequest.key)
}
inline void ScheduleRewriteRequest::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.ScheduleRewriteRequest.key)
}
inline void ScheduleRewriteRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.ScheduleRewriteRequest.key)
}
inline ::std::string* ScheduleRewriteRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:net_instaweb.ScheduleRewriteRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScheduleRewriteRequest::release_key() {
  // @@protoc_insertion_point(field_release:net_instaweb.ScheduleRewriteRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScheduleRewriteRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.ScheduleRewriteRequest.key)
}

// optional .net_instaweb.ScheduleRewriteRequest.RewriteStatus status = 2;
inline void ScheduleRewriteRequest::clear_status() {
  status_ = 0;
}
inline ::net_instaweb::ScheduleRewriteRequest_RewriteStatus ScheduleRewriteRequest::status() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ScheduleRewriteRequest.status)
  return static_cast< ::net_instaweb::ScheduleRewriteRequest_RewriteStatus >(status_);
}
inline void ScheduleRewriteRequest::set_status(::net_instaweb::ScheduleRewriteRequest_RewriteStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ScheduleRewriteRequest.status)
}

// -------------------------------------------------------------------

// ScheduleRewriteResponse

// optional bool ok_to_proceed = 1;
inline void ScheduleRewriteResponse::clear_ok_to_proceed() {
  ok_to_proceed_ = false;
}
inline bool ScheduleRewriteResponse::ok_to_proceed() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ScheduleRewriteResponse.ok_to_proceed)
  return ok_to_proceed_;
}
inline void ScheduleRewriteResponse::set_ok_to_proceed(bool value) {
  
  ok_to_proceed_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ScheduleRewriteResponse.ok_to_proceed)
}

// -------------------------------------------------------------------

// ScheduleExpensiveOperationRequest

// -------------------------------------------------------------------

// ScheduleExpensiveOperationResponse

// optional bool ok_to_proceed = 1;
inline void ScheduleExpensiveOperationResponse::clear_ok_to_proceed() {
  ok_to_proceed_ = false;
}
inline bool ScheduleExpensiveOperationResponse::ok_to_proceed() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ScheduleExpensiveOperationResponse.ok_to_proceed)
  return ok_to_proceed_;
}
inline void ScheduleExpensiveOperationResponse::set_ok_to_proceed(bool value) {
  
  ok_to_proceed_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ScheduleExpensiveOperationResponse.ok_to_proceed)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace net_instaweb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::net_instaweb::ScheduleRewriteRequest_RewriteStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::net_instaweb::ScheduleRewriteRequest_RewriteStatus>() {
  return ::net_instaweb::ScheduleRewriteRequest_RewriteStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pagespeed_2fcontroller_2fcontroller_2eproto__INCLUDED
