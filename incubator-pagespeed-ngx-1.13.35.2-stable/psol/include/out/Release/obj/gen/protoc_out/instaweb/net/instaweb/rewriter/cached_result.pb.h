// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/instaweb/rewriter/cached_result.proto

#ifndef PROTOBUF_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto__INCLUDED
#define PROTOBUF_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/instaweb/spriter/public/image_spriter.pb.h"
#include "net/instaweb/rewriter/dependencies.pb.h"
#include "net/instaweb/rewriter/input_info.pb.h"
// @@protoc_insertion_point(includes)

namespace net_instaweb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
void protobuf_AssignDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
void protobuf_ShutdownFile_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();

class AssociatedImageInfo;
class CachedResult;
class ImageDim;
class OutputPartitions;
class ResourceContext;

enum ResourceContext_LibWebpLevel {
  ResourceContext_LibWebpLevel_LIBWEBP_NONE = 0,
  ResourceContext_LibWebpLevel_LIBWEBP_LOSSY_ONLY = 1,
  ResourceContext_LibWebpLevel_LIBWEBP_LOSSY_LOSSLESS_ALPHA = 2,
  ResourceContext_LibWebpLevel_LIBWEBP_ANIMATED = 3
};
bool ResourceContext_LibWebpLevel_IsValid(int value);
const ResourceContext_LibWebpLevel ResourceContext_LibWebpLevel_LibWebpLevel_MIN = ResourceContext_LibWebpLevel_LIBWEBP_NONE;
const ResourceContext_LibWebpLevel ResourceContext_LibWebpLevel_LibWebpLevel_MAX = ResourceContext_LibWebpLevel_LIBWEBP_ANIMATED;
const int ResourceContext_LibWebpLevel_LibWebpLevel_ARRAYSIZE = ResourceContext_LibWebpLevel_LibWebpLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResourceContext_LibWebpLevel_descriptor();
inline const ::std::string& ResourceContext_LibWebpLevel_Name(ResourceContext_LibWebpLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResourceContext_LibWebpLevel_descriptor(), value);
}
inline bool ResourceContext_LibWebpLevel_Parse(
    const ::std::string& name, ResourceContext_LibWebpLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResourceContext_LibWebpLevel>(
    ResourceContext_LibWebpLevel_descriptor(), name, value);
}
// ===================================================================

class ImageDim : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:net_instaweb.ImageDim) */ {
 public:
  ImageDim();
  virtual ~ImageDim();

  ImageDim(const ImageDim& from);

  inline ImageDim& operator=(const ImageDim& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageDim& default_instance();

  void Swap(ImageDim* other);

  // implements Message ----------------------------------------------

  inline ImageDim* New() const { return New(NULL); }

  ImageDim* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImageDim& from);
  void MergeFrom(const ImageDim& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImageDim* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 width = 1 [default = -1];
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 1;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // optional int32 height = 2 [default = -1];
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:net_instaweb.ImageDim)
 private:
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  friend void  protobuf_AddDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
  friend void protobuf_AssignDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
  friend void protobuf_ShutdownFile_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();

  void InitAsDefaultInstance();
  static ImageDim* default_instance_;
};
// -------------------------------------------------------------------

class AssociatedImageInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:net_instaweb.AssociatedImageInfo) */ {
 public:
  AssociatedImageInfo();
  virtual ~AssociatedImageInfo();

  AssociatedImageInfo(const AssociatedImageInfo& from);

  inline AssociatedImageInfo& operator=(const AssociatedImageInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AssociatedImageInfo& default_instance();

  void Swap(AssociatedImageInfo* other);

  // implements Message ----------------------------------------------

  inline AssociatedImageInfo* New() const { return New(NULL); }

  AssociatedImageInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AssociatedImageInfo& from);
  void MergeFrom(const AssociatedImageInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AssociatedImageInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional .net_instaweb.ImageDim dimensions = 2;
  bool has_dimensions() const;
  void clear_dimensions();
  static const int kDimensionsFieldNumber = 2;
  const ::net_instaweb::ImageDim& dimensions() const;
  ::net_instaweb::ImageDim* mutable_dimensions();
  ::net_instaweb::ImageDim* release_dimensions();
  void set_allocated_dimensions(::net_instaweb::ImageDim* dimensions);

  // @@protoc_insertion_point(class_scope:net_instaweb.AssociatedImageInfo)
 private:
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_dimensions();
  inline void clear_has_dimensions();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::net_instaweb::ImageDim* dimensions_;
  friend void  protobuf_AddDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
  friend void protobuf_AssignDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
  friend void protobuf_ShutdownFile_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();

  void InitAsDefaultInstance();
  static AssociatedImageInfo* default_instance_;
};
// -------------------------------------------------------------------

class CachedResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:net_instaweb.CachedResult) */ {
 public:
  CachedResult();
  virtual ~CachedResult();

  CachedResult(const CachedResult& from);

  inline CachedResult& operator=(const CachedResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CachedResult& default_instance();

  void Swap(CachedResult* other);

  // implements Message ----------------------------------------------

  inline CachedResult* New() const { return New(NULL); }

  CachedResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CachedResult& from);
  void MergeFrom(const CachedResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CachedResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool optimizable = 1 [default = true];
  bool has_optimizable() const;
  void clear_optimizable();
  static const int kOptimizableFieldNumber = 1;
  bool optimizable() const;
  void set_optimizable(bool value);

  // optional string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional bool frozen = 5;
  bool has_frozen() const;
  void clear_frozen();
  static const int kFrozenFieldNumber = 5;
  bool frozen() const;
  void set_frozen(bool value);

  // optional string hash = 6;
  bool has_hash() const;
  void clear_hash();
  static const int kHashFieldNumber = 6;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // optional string extension = 7;
  bool has_extension() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  const ::std::string& extension() const;
  void set_extension(const ::std::string& value);
  void set_extension(const char* value);
  void set_extension(const char* value, size_t size);
  ::std::string* mutable_extension();
  ::std::string* release_extension();
  void set_allocated_extension(::std::string* extension);

  // optional .net_instaweb.ImageDim image_file_dims = 11;
  bool has_image_file_dims() const;
  void clear_image_file_dims();
  static const int kImageFileDimsFieldNumber = 11;
  const ::net_instaweb::ImageDim& image_file_dims() const;
  ::net_instaweb::ImageDim* mutable_image_file_dims();
  ::net_instaweb::ImageDim* release_image_file_dims();
  void set_allocated_image_file_dims(::net_instaweb::ImageDim* image_file_dims);

  // optional bytes inlined_data = 12;
  bool has_inlined_data() const;
  void clear_inlined_data();
  static const int kInlinedDataFieldNumber = 12;
  const ::std::string& inlined_data() const;
  void set_inlined_data(const ::std::string& value);
  void set_inlined_data(const char* value);
  void set_inlined_data(const void* value, size_t size);
  ::std::string* mutable_inlined_data();
  ::std::string* release_inlined_data();
  void set_allocated_inlined_data(::std::string* inlined_data);

  // optional .net_instaweb.spriter.SpriterResult spriter_result = 13;
  bool has_spriter_result() const;
  void clear_spriter_result();
  static const int kSpriterResultFieldNumber = 13;
  const ::net_instaweb::spriter::SpriterResult& spriter_result() const;
  ::net_instaweb::spriter::SpriterResult* mutable_spriter_result();
  ::net_instaweb::spriter::SpriterResult* release_spriter_result();
  void set_allocated_spriter_result(::net_instaweb::spriter::SpriterResult* spriter_result);

  // repeated .net_instaweb.InputInfo input = 14;
  int input_size() const;
  void clear_input();
  static const int kInputFieldNumber = 14;
  const ::net_instaweb::InputInfo& input(int index) const;
  ::net_instaweb::InputInfo* mutable_input(int index);
  ::net_instaweb::InputInfo* add_input();
  ::google::protobuf::RepeatedPtrField< ::net_instaweb::InputInfo >*
      mutable_input();
  const ::google::protobuf::RepeatedPtrField< ::net_instaweb::InputInfo >&
      input() const;

  // optional int32 inlined_image_type = 15;
  bool has_inlined_image_type() const;
  void clear_inlined_image_type();
  static const int kInlinedImageTypeFieldNumber = 15;
  ::google::protobuf::int32 inlined_image_type() const;
  void set_inlined_image_type(::google::protobuf::int32 value);

  // optional bytes low_resolution_inlined_data = 16;
  bool has_low_resolution_inlined_data() const;
  void clear_low_resolution_inlined_data();
  static const int kLowResolutionInlinedDataFieldNumber = 16;
  const ::std::string& low_resolution_inlined_data() const;
  void set_low_resolution_inlined_data(const ::std::string& value);
  void set_low_resolution_inlined_data(const char* value);
  void set_low_resolution_inlined_data(const void* value, size_t size);
  ::std::string* mutable_low_resolution_inlined_data();
  ::std::string* release_low_resolution_inlined_data();
  void set_allocated_low_resolution_inlined_data(::std::string* low_resolution_inlined_data);

  // optional int32 low_resolution_inlined_image_type = 17;
  bool has_low_resolution_inlined_image_type() const;
  void clear_low_resolution_inlined_image_type();
  static const int kLowResolutionInlinedImageTypeFieldNumber = 17;
  ::google::protobuf::int32 low_resolution_inlined_image_type() const;
  void set_low_resolution_inlined_image_type(::google::protobuf::int32 value);

  // optional bool url_relocatable = 18 [default = true];
  bool has_url_relocatable() const;
  void clear_url_relocatable();
  static const int kUrlRelocatableFieldNumber = 18;
  bool url_relocatable() const;
  void set_url_relocatable(bool value);

  // optional bool canonicalize_url = 19;
  bool has_canonicalize_url() const;
  void clear_canonicalize_url();
  static const int kCanonicalizeUrlFieldNumber = 19;
  bool canonicalize_url() const;
  void set_canonicalize_url(bool value);

  // optional int64 size = 20;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 20;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // repeated string debug_message = 21;
  int debug_message_size() const;
  void clear_debug_message();
  static const int kDebugMessageFieldNumber = 21;
  const ::std::string& debug_message(int index) const;
  ::std::string* mutable_debug_message(int index);
  void set_debug_message(int index, const ::std::string& value);
  void set_debug_message(int index, const char* value);
  void set_debug_message(int index, const char* value, size_t size);
  ::std::string* add_debug_message();
  void add_debug_message(const ::std::string& value);
  void add_debug_message(const char* value);
  void add_debug_message(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& debug_message() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_debug_message();

  // repeated .net_instaweb.AssociatedImageInfo associated_image_info = 23;
  int associated_image_info_size() const;
  void clear_associated_image_info();
  static const int kAssociatedImageInfoFieldNumber = 23;
  const ::net_instaweb::AssociatedImageInfo& associated_image_info(int index) const;
  ::net_instaweb::AssociatedImageInfo* mutable_associated_image_info(int index);
  ::net_instaweb::AssociatedImageInfo* add_associated_image_info();
  ::google::protobuf::RepeatedPtrField< ::net_instaweb::AssociatedImageInfo >*
      mutable_associated_image_info();
  const ::google::protobuf::RepeatedPtrField< ::net_instaweb::AssociatedImageInfo >&
      associated_image_info() const;

  // optional bool is_inline_output_resource = 24;
  bool has_is_inline_output_resource() const;
  void clear_is_inline_output_resource();
  static const int kIsInlineOutputResourceFieldNumber = 24;
  bool is_inline_output_resource() const;
  void set_is_inline_output_resource(bool value);

  // optional int32 optimized_image_type = 25;
  bool has_optimized_image_type() const;
  void clear_optimized_image_type();
  static const int kOptimizedImageTypeFieldNumber = 25;
  ::google::protobuf::int32 optimized_image_type() const;
  void set_optimized_image_type(::google::protobuf::int32 value);

  // repeated .net_instaweb.Dependency collected_dependency = 26;
  int collected_dependency_size() const;
  void clear_collected_dependency();
  static const int kCollectedDependencyFieldNumber = 26;
  const ::net_instaweb::Dependency& collected_dependency(int index) const;
  ::net_instaweb::Dependency* mutable_collected_dependency(int index);
  ::net_instaweb::Dependency* add_collected_dependency();
  ::google::protobuf::RepeatedPtrField< ::net_instaweb::Dependency >*
      mutable_collected_dependency();
  const ::google::protobuf::RepeatedPtrField< ::net_instaweb::Dependency >&
      collected_dependency() const;

  // @@protoc_insertion_point(class_scope:net_instaweb.CachedResult)
 private:
  inline void set_has_optimizable();
  inline void clear_has_optimizable();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_frozen();
  inline void clear_has_frozen();
  inline void set_has_hash();
  inline void clear_has_hash();
  inline void set_has_extension();
  inline void clear_has_extension();
  inline void set_has_image_file_dims();
  inline void clear_has_image_file_dims();
  inline void set_has_inlined_data();
  inline void clear_has_inlined_data();
  inline void set_has_spriter_result();
  inline void clear_has_spriter_result();
  inline void set_has_inlined_image_type();
  inline void clear_has_inlined_image_type();
  inline void set_has_low_resolution_inlined_data();
  inline void clear_has_low_resolution_inlined_data();
  inline void set_has_low_resolution_inlined_image_type();
  inline void clear_has_low_resolution_inlined_image_type();
  inline void set_has_url_relocatable();
  inline void clear_has_url_relocatable();
  inline void set_has_canonicalize_url();
  inline void clear_has_canonicalize_url();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_is_inline_output_resource();
  inline void clear_has_is_inline_output_resource();
  inline void set_has_optimized_image_type();
  inline void clear_has_optimized_image_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  ::google::protobuf::internal::ArenaStringPtr extension_;
  ::net_instaweb::ImageDim* image_file_dims_;
  ::google::protobuf::internal::ArenaStringPtr inlined_data_;
  ::net_instaweb::spriter::SpriterResult* spriter_result_;
  bool optimizable_;
  bool frozen_;
  bool url_relocatable_;
  bool canonicalize_url_;
  ::google::protobuf::int32 inlined_image_type_;
  ::google::protobuf::RepeatedPtrField< ::net_instaweb::InputInfo > input_;
  ::google::protobuf::internal::ArenaStringPtr low_resolution_inlined_data_;
  ::google::protobuf::int64 size_;
  ::google::protobuf::int32 low_resolution_inlined_image_type_;
  bool is_inline_output_resource_;
  ::google::protobuf::RepeatedPtrField< ::std::string> debug_message_;
  ::google::protobuf::RepeatedPtrField< ::net_instaweb::AssociatedImageInfo > associated_image_info_;
  ::google::protobuf::RepeatedPtrField< ::net_instaweb::Dependency > collected_dependency_;
  ::google::protobuf::int32 optimized_image_type_;
  friend void  protobuf_AddDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
  friend void protobuf_AssignDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
  friend void protobuf_ShutdownFile_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();

  void InitAsDefaultInstance();
  static CachedResult* default_instance_;
};
// -------------------------------------------------------------------

class OutputPartitions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:net_instaweb.OutputPartitions) */ {
 public:
  OutputPartitions();
  virtual ~OutputPartitions();

  OutputPartitions(const OutputPartitions& from);

  inline OutputPartitions& operator=(const OutputPartitions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OutputPartitions& default_instance();

  void Swap(OutputPartitions* other);

  // implements Message ----------------------------------------------

  inline OutputPartitions* New() const { return New(NULL); }

  OutputPartitions* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OutputPartitions& from);
  void MergeFrom(const OutputPartitions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OutputPartitions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .net_instaweb.CachedResult partition = 1;
  int partition_size() const;
  void clear_partition();
  static const int kPartitionFieldNumber = 1;
  const ::net_instaweb::CachedResult& partition(int index) const;
  ::net_instaweb::CachedResult* mutable_partition(int index);
  ::net_instaweb::CachedResult* add_partition();
  ::google::protobuf::RepeatedPtrField< ::net_instaweb::CachedResult >*
      mutable_partition();
  const ::google::protobuf::RepeatedPtrField< ::net_instaweb::CachedResult >&
      partition() const;

  // repeated .net_instaweb.InputInfo other_dependency = 2;
  int other_dependency_size() const;
  void clear_other_dependency();
  static const int kOtherDependencyFieldNumber = 2;
  const ::net_instaweb::InputInfo& other_dependency(int index) const;
  ::net_instaweb::InputInfo* mutable_other_dependency(int index);
  ::net_instaweb::InputInfo* add_other_dependency();
  ::google::protobuf::RepeatedPtrField< ::net_instaweb::InputInfo >*
      mutable_other_dependency();
  const ::google::protobuf::RepeatedPtrField< ::net_instaweb::InputInfo >&
      other_dependency() const;

  // repeated string debug_message = 3;
  int debug_message_size() const;
  void clear_debug_message();
  static const int kDebugMessageFieldNumber = 3;
  const ::std::string& debug_message(int index) const;
  ::std::string* mutable_debug_message(int index);
  void set_debug_message(int index, const ::std::string& value);
  void set_debug_message(int index, const char* value);
  void set_debug_message(int index, const char* value, size_t size);
  ::std::string* add_debug_message();
  void add_debug_message(const ::std::string& value);
  void add_debug_message(const char* value);
  void add_debug_message(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& debug_message() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_debug_message();

  // @@protoc_insertion_point(class_scope:net_instaweb.OutputPartitions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::net_instaweb::CachedResult > partition_;
  ::google::protobuf::RepeatedPtrField< ::net_instaweb::InputInfo > other_dependency_;
  ::google::protobuf::RepeatedPtrField< ::std::string> debug_message_;
  friend void  protobuf_AddDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
  friend void protobuf_AssignDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
  friend void protobuf_ShutdownFile_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();

  void InitAsDefaultInstance();
  static OutputPartitions* default_instance_;
};
// -------------------------------------------------------------------

class ResourceContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:net_instaweb.ResourceContext) */ {
 public:
  ResourceContext();
  virtual ~ResourceContext();

  ResourceContext(const ResourceContext& from);

  inline ResourceContext& operator=(const ResourceContext& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceContext& default_instance();

  void Swap(ResourceContext* other);

  // implements Message ----------------------------------------------

  inline ResourceContext* New() const { return New(NULL); }

  ResourceContext* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceContext& from);
  void MergeFrom(const ResourceContext& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResourceContext* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ResourceContext_LibWebpLevel LibWebpLevel;
  static const LibWebpLevel LIBWEBP_NONE =
    ResourceContext_LibWebpLevel_LIBWEBP_NONE;
  static const LibWebpLevel LIBWEBP_LOSSY_ONLY =
    ResourceContext_LibWebpLevel_LIBWEBP_LOSSY_ONLY;
  static const LibWebpLevel LIBWEBP_LOSSY_LOSSLESS_ALPHA =
    ResourceContext_LibWebpLevel_LIBWEBP_LOSSY_LOSSLESS_ALPHA;
  static const LibWebpLevel LIBWEBP_ANIMATED =
    ResourceContext_LibWebpLevel_LIBWEBP_ANIMATED;
  static inline bool LibWebpLevel_IsValid(int value) {
    return ResourceContext_LibWebpLevel_IsValid(value);
  }
  static const LibWebpLevel LibWebpLevel_MIN =
    ResourceContext_LibWebpLevel_LibWebpLevel_MIN;
  static const LibWebpLevel LibWebpLevel_MAX =
    ResourceContext_LibWebpLevel_LibWebpLevel_MAX;
  static const int LibWebpLevel_ARRAYSIZE =
    ResourceContext_LibWebpLevel_LibWebpLevel_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LibWebpLevel_descriptor() {
    return ResourceContext_LibWebpLevel_descriptor();
  }
  static inline const ::std::string& LibWebpLevel_Name(LibWebpLevel value) {
    return ResourceContext_LibWebpLevel_Name(value);
  }
  static inline bool LibWebpLevel_Parse(const ::std::string& name,
      LibWebpLevel* value) {
    return ResourceContext_LibWebpLevel_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .net_instaweb.ImageDim desired_image_dims = 1;
  bool has_desired_image_dims() const;
  void clear_desired_image_dims();
  static const int kDesiredImageDimsFieldNumber = 1;
  const ::net_instaweb::ImageDim& desired_image_dims() const;
  ::net_instaweb::ImageDim* mutable_desired_image_dims();
  ::net_instaweb::ImageDim* release_desired_image_dims();
  void set_allocated_desired_image_dims(::net_instaweb::ImageDim* desired_image_dims);

  // optional bool inline_images = 3 [default = true];
  bool has_inline_images() const;
  void clear_inline_images();
  static const int kInlineImagesFieldNumber = 3;
  bool inline_images() const;
  void set_inline_images(bool value);

  // optional bool mobile_user_agent = 4;
  bool has_mobile_user_agent() const;
  void clear_mobile_user_agent();
  static const int kMobileUserAgentFieldNumber = 4;
  bool mobile_user_agent() const;
  void set_mobile_user_agent(bool value);

  // optional .net_instaweb.ResourceContext.LibWebpLevel libwebp_level = 5 [default = LIBWEBP_NONE];
  bool has_libwebp_level() const;
  void clear_libwebp_level();
  static const int kLibwebpLevelFieldNumber = 5;
  ::net_instaweb::ResourceContext_LibWebpLevel libwebp_level() const;
  void set_libwebp_level(::net_instaweb::ResourceContext_LibWebpLevel value);

  // optional bool may_use_small_screen_quality = 7;
  bool has_may_use_small_screen_quality() const;
  void clear_may_use_small_screen_quality();
  static const int kMayUseSmallScreenQualityFieldNumber = 7;
  bool may_use_small_screen_quality() const;
  void set_may_use_small_screen_quality(bool value);

  // optional bool may_use_save_data_quality = 8;
  bool has_may_use_save_data_quality() const;
  void clear_may_use_save_data_quality();
  static const int kMayUseSaveDataQualityFieldNumber = 8;
  bool may_use_save_data_quality() const;
  void set_may_use_save_data_quality(bool value);

  // @@protoc_insertion_point(class_scope:net_instaweb.ResourceContext)
 private:
  inline void set_has_desired_image_dims();
  inline void clear_has_desired_image_dims();
  inline void set_has_inline_images();
  inline void clear_has_inline_images();
  inline void set_has_mobile_user_agent();
  inline void clear_has_mobile_user_agent();
  inline void set_has_libwebp_level();
  inline void clear_has_libwebp_level();
  inline void set_has_may_use_small_screen_quality();
  inline void clear_has_may_use_small_screen_quality();
  inline void set_has_may_use_save_data_quality();
  inline void clear_has_may_use_save_data_quality();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::net_instaweb::ImageDim* desired_image_dims_;
  int libwebp_level_;
  bool inline_images_;
  bool mobile_user_agent_;
  bool may_use_small_screen_quality_;
  bool may_use_save_data_quality_;
  friend void  protobuf_AddDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
  friend void protobuf_AssignDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
  friend void protobuf_ShutdownFile_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();

  void InitAsDefaultInstance();
  static ResourceContext* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ImageDim

// optional int32 width = 1 [default = -1];
inline bool ImageDim::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImageDim::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImageDim::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImageDim::clear_width() {
  width_ = -1;
  clear_has_width();
}
inline ::google::protobuf::int32 ImageDim::width() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ImageDim.width)
  return width_;
}
inline void ImageDim::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ImageDim.width)
}

// optional int32 height = 2 [default = -1];
inline bool ImageDim::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImageDim::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImageDim::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImageDim::clear_height() {
  height_ = -1;
  clear_has_height();
}
inline ::google::protobuf::int32 ImageDim::height() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ImageDim.height)
  return height_;
}
inline void ImageDim::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ImageDim.height)
}

// -------------------------------------------------------------------

// AssociatedImageInfo

// optional string url = 1;
inline bool AssociatedImageInfo::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AssociatedImageInfo::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AssociatedImageInfo::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AssociatedImageInfo::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& AssociatedImageInfo::url() const {
  // @@protoc_insertion_point(field_get:net_instaweb.AssociatedImageInfo.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AssociatedImageInfo::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.AssociatedImageInfo.url)
}
inline void AssociatedImageInfo::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.AssociatedImageInfo.url)
}
inline void AssociatedImageInfo::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.AssociatedImageInfo.url)
}
inline ::std::string* AssociatedImageInfo::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:net_instaweb.AssociatedImageInfo.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AssociatedImageInfo::release_url() {
  // @@protoc_insertion_point(field_release:net_instaweb.AssociatedImageInfo.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AssociatedImageInfo::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.AssociatedImageInfo.url)
}

// optional .net_instaweb.ImageDim dimensions = 2;
inline bool AssociatedImageInfo::has_dimensions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AssociatedImageInfo::set_has_dimensions() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AssociatedImageInfo::clear_has_dimensions() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AssociatedImageInfo::clear_dimensions() {
  if (dimensions_ != NULL) dimensions_->::net_instaweb::ImageDim::Clear();
  clear_has_dimensions();
}
inline const ::net_instaweb::ImageDim& AssociatedImageInfo::dimensions() const {
  // @@protoc_insertion_point(field_get:net_instaweb.AssociatedImageInfo.dimensions)
  return dimensions_ != NULL ? *dimensions_ : *default_instance_->dimensions_;
}
inline ::net_instaweb::ImageDim* AssociatedImageInfo::mutable_dimensions() {
  set_has_dimensions();
  if (dimensions_ == NULL) {
    dimensions_ = new ::net_instaweb::ImageDim;
  }
  // @@protoc_insertion_point(field_mutable:net_instaweb.AssociatedImageInfo.dimensions)
  return dimensions_;
}
inline ::net_instaweb::ImageDim* AssociatedImageInfo::release_dimensions() {
  // @@protoc_insertion_point(field_release:net_instaweb.AssociatedImageInfo.dimensions)
  clear_has_dimensions();
  ::net_instaweb::ImageDim* temp = dimensions_;
  dimensions_ = NULL;
  return temp;
}
inline void AssociatedImageInfo::set_allocated_dimensions(::net_instaweb::ImageDim* dimensions) {
  delete dimensions_;
  dimensions_ = dimensions;
  if (dimensions) {
    set_has_dimensions();
  } else {
    clear_has_dimensions();
  }
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.AssociatedImageInfo.dimensions)
}

// -------------------------------------------------------------------

// CachedResult

// optional bool optimizable = 1 [default = true];
inline bool CachedResult::has_optimizable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CachedResult::set_has_optimizable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CachedResult::clear_has_optimizable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CachedResult::clear_optimizable() {
  optimizable_ = true;
  clear_has_optimizable();
}
inline bool CachedResult::optimizable() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.optimizable)
  return optimizable_;
}
inline void CachedResult::set_optimizable(bool value) {
  set_has_optimizable();
  optimizable_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.optimizable)
}

// optional string url = 2;
inline bool CachedResult::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CachedResult::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CachedResult::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CachedResult::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CachedResult::url() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CachedResult::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.url)
}
inline void CachedResult::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.CachedResult.url)
}
inline void CachedResult::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.CachedResult.url)
}
inline ::std::string* CachedResult::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CachedResult::release_url() {
  // @@protoc_insertion_point(field_release:net_instaweb.CachedResult.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CachedResult::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.CachedResult.url)
}

// optional bool frozen = 5;
inline bool CachedResult::has_frozen() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CachedResult::set_has_frozen() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CachedResult::clear_has_frozen() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CachedResult::clear_frozen() {
  frozen_ = false;
  clear_has_frozen();
}
inline bool CachedResult::frozen() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.frozen)
  return frozen_;
}
inline void CachedResult::set_frozen(bool value) {
  set_has_frozen();
  frozen_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.frozen)
}

// optional string hash = 6;
inline bool CachedResult::has_hash() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CachedResult::set_has_hash() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CachedResult::clear_has_hash() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CachedResult::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hash();
}
inline const ::std::string& CachedResult::hash() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.hash)
  return hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CachedResult::set_hash(const ::std::string& value) {
  set_has_hash();
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.hash)
}
inline void CachedResult::set_hash(const char* value) {
  set_has_hash();
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.CachedResult.hash)
}
inline void CachedResult::set_hash(const char* value, size_t size) {
  set_has_hash();
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.CachedResult.hash)
}
inline ::std::string* CachedResult::mutable_hash() {
  set_has_hash();
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CachedResult::release_hash() {
  // @@protoc_insertion_point(field_release:net_instaweb.CachedResult.hash)
  clear_has_hash();
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CachedResult::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    set_has_hash();
  } else {
    clear_has_hash();
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.CachedResult.hash)
}

// optional string extension = 7;
inline bool CachedResult::has_extension() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CachedResult::set_has_extension() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CachedResult::clear_has_extension() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CachedResult::clear_extension() {
  extension_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extension();
}
inline const ::std::string& CachedResult::extension() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.extension)
  return extension_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CachedResult::set_extension(const ::std::string& value) {
  set_has_extension();
  extension_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.extension)
}
inline void CachedResult::set_extension(const char* value) {
  set_has_extension();
  extension_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.CachedResult.extension)
}
inline void CachedResult::set_extension(const char* value, size_t size) {
  set_has_extension();
  extension_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.CachedResult.extension)
}
inline ::std::string* CachedResult::mutable_extension() {
  set_has_extension();
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.extension)
  return extension_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CachedResult::release_extension() {
  // @@protoc_insertion_point(field_release:net_instaweb.CachedResult.extension)
  clear_has_extension();
  return extension_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CachedResult::set_allocated_extension(::std::string* extension) {
  if (extension != NULL) {
    set_has_extension();
  } else {
    clear_has_extension();
  }
  extension_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extension);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.CachedResult.extension)
}

// optional .net_instaweb.ImageDim image_file_dims = 11;
inline bool CachedResult::has_image_file_dims() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CachedResult::set_has_image_file_dims() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CachedResult::clear_has_image_file_dims() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CachedResult::clear_image_file_dims() {
  if (image_file_dims_ != NULL) image_file_dims_->::net_instaweb::ImageDim::Clear();
  clear_has_image_file_dims();
}
inline const ::net_instaweb::ImageDim& CachedResult::image_file_dims() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.image_file_dims)
  return image_file_dims_ != NULL ? *image_file_dims_ : *default_instance_->image_file_dims_;
}
inline ::net_instaweb::ImageDim* CachedResult::mutable_image_file_dims() {
  set_has_image_file_dims();
  if (image_file_dims_ == NULL) {
    image_file_dims_ = new ::net_instaweb::ImageDim;
  }
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.image_file_dims)
  return image_file_dims_;
}
inline ::net_instaweb::ImageDim* CachedResult::release_image_file_dims() {
  // @@protoc_insertion_point(field_release:net_instaweb.CachedResult.image_file_dims)
  clear_has_image_file_dims();
  ::net_instaweb::ImageDim* temp = image_file_dims_;
  image_file_dims_ = NULL;
  return temp;
}
inline void CachedResult::set_allocated_image_file_dims(::net_instaweb::ImageDim* image_file_dims) {
  delete image_file_dims_;
  image_file_dims_ = image_file_dims;
  if (image_file_dims) {
    set_has_image_file_dims();
  } else {
    clear_has_image_file_dims();
  }
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.CachedResult.image_file_dims)
}

// optional bytes inlined_data = 12;
inline bool CachedResult::has_inlined_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CachedResult::set_has_inlined_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CachedResult::clear_has_inlined_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CachedResult::clear_inlined_data() {
  inlined_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_inlined_data();
}
inline const ::std::string& CachedResult::inlined_data() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.inlined_data)
  return inlined_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CachedResult::set_inlined_data(const ::std::string& value) {
  set_has_inlined_data();
  inlined_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.inlined_data)
}
inline void CachedResult::set_inlined_data(const char* value) {
  set_has_inlined_data();
  inlined_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.CachedResult.inlined_data)
}
inline void CachedResult::set_inlined_data(const void* value, size_t size) {
  set_has_inlined_data();
  inlined_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.CachedResult.inlined_data)
}
inline ::std::string* CachedResult::mutable_inlined_data() {
  set_has_inlined_data();
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.inlined_data)
  return inlined_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CachedResult::release_inlined_data() {
  // @@protoc_insertion_point(field_release:net_instaweb.CachedResult.inlined_data)
  clear_has_inlined_data();
  return inlined_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CachedResult::set_allocated_inlined_data(::std::string* inlined_data) {
  if (inlined_data != NULL) {
    set_has_inlined_data();
  } else {
    clear_has_inlined_data();
  }
  inlined_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inlined_data);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.CachedResult.inlined_data)
}

// optional .net_instaweb.spriter.SpriterResult spriter_result = 13;
inline bool CachedResult::has_spriter_result() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CachedResult::set_has_spriter_result() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CachedResult::clear_has_spriter_result() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CachedResult::clear_spriter_result() {
  if (spriter_result_ != NULL) spriter_result_->::net_instaweb::spriter::SpriterResult::Clear();
  clear_has_spriter_result();
}
inline const ::net_instaweb::spriter::SpriterResult& CachedResult::spriter_result() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.spriter_result)
  return spriter_result_ != NULL ? *spriter_result_ : *default_instance_->spriter_result_;
}
inline ::net_instaweb::spriter::SpriterResult* CachedResult::mutable_spriter_result() {
  set_has_spriter_result();
  if (spriter_result_ == NULL) {
    spriter_result_ = new ::net_instaweb::spriter::SpriterResult;
  }
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.spriter_result)
  return spriter_result_;
}
inline ::net_instaweb::spriter::SpriterResult* CachedResult::release_spriter_result() {
  // @@protoc_insertion_point(field_release:net_instaweb.CachedResult.spriter_result)
  clear_has_spriter_result();
  ::net_instaweb::spriter::SpriterResult* temp = spriter_result_;
  spriter_result_ = NULL;
  return temp;
}
inline void CachedResult::set_allocated_spriter_result(::net_instaweb::spriter::SpriterResult* spriter_result) {
  delete spriter_result_;
  spriter_result_ = spriter_result;
  if (spriter_result) {
    set_has_spriter_result();
  } else {
    clear_has_spriter_result();
  }
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.CachedResult.spriter_result)
}

// repeated .net_instaweb.InputInfo input = 14;
inline int CachedResult::input_size() const {
  return input_.size();
}
inline void CachedResult::clear_input() {
  input_.Clear();
}
inline const ::net_instaweb::InputInfo& CachedResult::input(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.input)
  return input_.Get(index);
}
inline ::net_instaweb::InputInfo* CachedResult::mutable_input(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.input)
  return input_.Mutable(index);
}
inline ::net_instaweb::InputInfo* CachedResult::add_input() {
  // @@protoc_insertion_point(field_add:net_instaweb.CachedResult.input)
  return input_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::net_instaweb::InputInfo >*
CachedResult::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.CachedResult.input)
  return &input_;
}
inline const ::google::protobuf::RepeatedPtrField< ::net_instaweb::InputInfo >&
CachedResult::input() const {
  // @@protoc_insertion_point(field_list:net_instaweb.CachedResult.input)
  return input_;
}

// optional int32 inlined_image_type = 15;
inline bool CachedResult::has_inlined_image_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CachedResult::set_has_inlined_image_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CachedResult::clear_has_inlined_image_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CachedResult::clear_inlined_image_type() {
  inlined_image_type_ = 0;
  clear_has_inlined_image_type();
}
inline ::google::protobuf::int32 CachedResult::inlined_image_type() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.inlined_image_type)
  return inlined_image_type_;
}
inline void CachedResult::set_inlined_image_type(::google::protobuf::int32 value) {
  set_has_inlined_image_type();
  inlined_image_type_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.inlined_image_type)
}

// optional bytes low_resolution_inlined_data = 16;
inline bool CachedResult::has_low_resolution_inlined_data() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CachedResult::set_has_low_resolution_inlined_data() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CachedResult::clear_has_low_resolution_inlined_data() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CachedResult::clear_low_resolution_inlined_data() {
  low_resolution_inlined_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_low_resolution_inlined_data();
}
inline const ::std::string& CachedResult::low_resolution_inlined_data() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.low_resolution_inlined_data)
  return low_resolution_inlined_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CachedResult::set_low_resolution_inlined_data(const ::std::string& value) {
  set_has_low_resolution_inlined_data();
  low_resolution_inlined_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.low_resolution_inlined_data)
}
inline void CachedResult::set_low_resolution_inlined_data(const char* value) {
  set_has_low_resolution_inlined_data();
  low_resolution_inlined_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.CachedResult.low_resolution_inlined_data)
}
inline void CachedResult::set_low_resolution_inlined_data(const void* value, size_t size) {
  set_has_low_resolution_inlined_data();
  low_resolution_inlined_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.CachedResult.low_resolution_inlined_data)
}
inline ::std::string* CachedResult::mutable_low_resolution_inlined_data() {
  set_has_low_resolution_inlined_data();
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.low_resolution_inlined_data)
  return low_resolution_inlined_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CachedResult::release_low_resolution_inlined_data() {
  // @@protoc_insertion_point(field_release:net_instaweb.CachedResult.low_resolution_inlined_data)
  clear_has_low_resolution_inlined_data();
  return low_resolution_inlined_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CachedResult::set_allocated_low_resolution_inlined_data(::std::string* low_resolution_inlined_data) {
  if (low_resolution_inlined_data != NULL) {
    set_has_low_resolution_inlined_data();
  } else {
    clear_has_low_resolution_inlined_data();
  }
  low_resolution_inlined_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), low_resolution_inlined_data);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.CachedResult.low_resolution_inlined_data)
}

// optional int32 low_resolution_inlined_image_type = 17;
inline bool CachedResult::has_low_resolution_inlined_image_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CachedResult::set_has_low_resolution_inlined_image_type() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CachedResult::clear_has_low_resolution_inlined_image_type() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CachedResult::clear_low_resolution_inlined_image_type() {
  low_resolution_inlined_image_type_ = 0;
  clear_has_low_resolution_inlined_image_type();
}
inline ::google::protobuf::int32 CachedResult::low_resolution_inlined_image_type() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.low_resolution_inlined_image_type)
  return low_resolution_inlined_image_type_;
}
inline void CachedResult::set_low_resolution_inlined_image_type(::google::protobuf::int32 value) {
  set_has_low_resolution_inlined_image_type();
  low_resolution_inlined_image_type_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.low_resolution_inlined_image_type)
}

// optional bool url_relocatable = 18 [default = true];
inline bool CachedResult::has_url_relocatable() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CachedResult::set_has_url_relocatable() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CachedResult::clear_has_url_relocatable() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CachedResult::clear_url_relocatable() {
  url_relocatable_ = true;
  clear_has_url_relocatable();
}
inline bool CachedResult::url_relocatable() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.url_relocatable)
  return url_relocatable_;
}
inline void CachedResult::set_url_relocatable(bool value) {
  set_has_url_relocatable();
  url_relocatable_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.url_relocatable)
}

// optional bool canonicalize_url = 19;
inline bool CachedResult::has_canonicalize_url() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CachedResult::set_has_canonicalize_url() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CachedResult::clear_has_canonicalize_url() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CachedResult::clear_canonicalize_url() {
  canonicalize_url_ = false;
  clear_has_canonicalize_url();
}
inline bool CachedResult::canonicalize_url() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.canonicalize_url)
  return canonicalize_url_;
}
inline void CachedResult::set_canonicalize_url(bool value) {
  set_has_canonicalize_url();
  canonicalize_url_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.canonicalize_url)
}

// optional int64 size = 20;
inline bool CachedResult::has_size() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CachedResult::set_has_size() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CachedResult::clear_has_size() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CachedResult::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::int64 CachedResult::size() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.size)
  return size_;
}
inline void CachedResult::set_size(::google::protobuf::int64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.size)
}

// repeated string debug_message = 21;
inline int CachedResult::debug_message_size() const {
  return debug_message_.size();
}
inline void CachedResult::clear_debug_message() {
  debug_message_.Clear();
}
inline const ::std::string& CachedResult::debug_message(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.debug_message)
  return debug_message_.Get(index);
}
inline ::std::string* CachedResult::mutable_debug_message(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.debug_message)
  return debug_message_.Mutable(index);
}
inline void CachedResult::set_debug_message(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.debug_message)
  debug_message_.Mutable(index)->assign(value);
}
inline void CachedResult::set_debug_message(int index, const char* value) {
  debug_message_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:net_instaweb.CachedResult.debug_message)
}
inline void CachedResult::set_debug_message(int index, const char* value, size_t size) {
  debug_message_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.CachedResult.debug_message)
}
inline ::std::string* CachedResult::add_debug_message() {
  // @@protoc_insertion_point(field_add_mutable:net_instaweb.CachedResult.debug_message)
  return debug_message_.Add();
}
inline void CachedResult::add_debug_message(const ::std::string& value) {
  debug_message_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:net_instaweb.CachedResult.debug_message)
}
inline void CachedResult::add_debug_message(const char* value) {
  debug_message_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:net_instaweb.CachedResult.debug_message)
}
inline void CachedResult::add_debug_message(const char* value, size_t size) {
  debug_message_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:net_instaweb.CachedResult.debug_message)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CachedResult::debug_message() const {
  // @@protoc_insertion_point(field_list:net_instaweb.CachedResult.debug_message)
  return debug_message_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CachedResult::mutable_debug_message() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.CachedResult.debug_message)
  return &debug_message_;
}

// repeated .net_instaweb.AssociatedImageInfo associated_image_info = 23;
inline int CachedResult::associated_image_info_size() const {
  return associated_image_info_.size();
}
inline void CachedResult::clear_associated_image_info() {
  associated_image_info_.Clear();
}
inline const ::net_instaweb::AssociatedImageInfo& CachedResult::associated_image_info(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.associated_image_info)
  return associated_image_info_.Get(index);
}
inline ::net_instaweb::AssociatedImageInfo* CachedResult::mutable_associated_image_info(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.associated_image_info)
  return associated_image_info_.Mutable(index);
}
inline ::net_instaweb::AssociatedImageInfo* CachedResult::add_associated_image_info() {
  // @@protoc_insertion_point(field_add:net_instaweb.CachedResult.associated_image_info)
  return associated_image_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::net_instaweb::AssociatedImageInfo >*
CachedResult::mutable_associated_image_info() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.CachedResult.associated_image_info)
  return &associated_image_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::net_instaweb::AssociatedImageInfo >&
CachedResult::associated_image_info() const {
  // @@protoc_insertion_point(field_list:net_instaweb.CachedResult.associated_image_info)
  return associated_image_info_;
}

// optional bool is_inline_output_resource = 24;
inline bool CachedResult::has_is_inline_output_resource() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CachedResult::set_has_is_inline_output_resource() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CachedResult::clear_has_is_inline_output_resource() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CachedResult::clear_is_inline_output_resource() {
  is_inline_output_resource_ = false;
  clear_has_is_inline_output_resource();
}
inline bool CachedResult::is_inline_output_resource() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.is_inline_output_resource)
  return is_inline_output_resource_;
}
inline void CachedResult::set_is_inline_output_resource(bool value) {
  set_has_is_inline_output_resource();
  is_inline_output_resource_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.is_inline_output_resource)
}

// optional int32 optimized_image_type = 25;
inline bool CachedResult::has_optimized_image_type() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CachedResult::set_has_optimized_image_type() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CachedResult::clear_has_optimized_image_type() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CachedResult::clear_optimized_image_type() {
  optimized_image_type_ = 0;
  clear_has_optimized_image_type();
}
inline ::google::protobuf::int32 CachedResult::optimized_image_type() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.optimized_image_type)
  return optimized_image_type_;
}
inline void CachedResult::set_optimized_image_type(::google::protobuf::int32 value) {
  set_has_optimized_image_type();
  optimized_image_type_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.optimized_image_type)
}

// repeated .net_instaweb.Dependency collected_dependency = 26;
inline int CachedResult::collected_dependency_size() const {
  return collected_dependency_.size();
}
inline void CachedResult::clear_collected_dependency() {
  collected_dependency_.Clear();
}
inline const ::net_instaweb::Dependency& CachedResult::collected_dependency(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.collected_dependency)
  return collected_dependency_.Get(index);
}
inline ::net_instaweb::Dependency* CachedResult::mutable_collected_dependency(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.collected_dependency)
  return collected_dependency_.Mutable(index);
}
inline ::net_instaweb::Dependency* CachedResult::add_collected_dependency() {
  // @@protoc_insertion_point(field_add:net_instaweb.CachedResult.collected_dependency)
  return collected_dependency_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::net_instaweb::Dependency >*
CachedResult::mutable_collected_dependency() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.CachedResult.collected_dependency)
  return &collected_dependency_;
}
inline const ::google::protobuf::RepeatedPtrField< ::net_instaweb::Dependency >&
CachedResult::collected_dependency() const {
  // @@protoc_insertion_point(field_list:net_instaweb.CachedResult.collected_dependency)
  return collected_dependency_;
}

// -------------------------------------------------------------------

// OutputPartitions

// repeated .net_instaweb.CachedResult partition = 1;
inline int OutputPartitions::partition_size() const {
  return partition_.size();
}
inline void OutputPartitions::clear_partition() {
  partition_.Clear();
}
inline const ::net_instaweb::CachedResult& OutputPartitions::partition(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.OutputPartitions.partition)
  return partition_.Get(index);
}
inline ::net_instaweb::CachedResult* OutputPartitions::mutable_partition(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.OutputPartitions.partition)
  return partition_.Mutable(index);
}
inline ::net_instaweb::CachedResult* OutputPartitions::add_partition() {
  // @@protoc_insertion_point(field_add:net_instaweb.OutputPartitions.partition)
  return partition_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::net_instaweb::CachedResult >*
OutputPartitions::mutable_partition() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.OutputPartitions.partition)
  return &partition_;
}
inline const ::google::protobuf::RepeatedPtrField< ::net_instaweb::CachedResult >&
OutputPartitions::partition() const {
  // @@protoc_insertion_point(field_list:net_instaweb.OutputPartitions.partition)
  return partition_;
}

// repeated .net_instaweb.InputInfo other_dependency = 2;
inline int OutputPartitions::other_dependency_size() const {
  return other_dependency_.size();
}
inline void OutputPartitions::clear_other_dependency() {
  other_dependency_.Clear();
}
inline const ::net_instaweb::InputInfo& OutputPartitions::other_dependency(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.OutputPartitions.other_dependency)
  return other_dependency_.Get(index);
}
inline ::net_instaweb::InputInfo* OutputPartitions::mutable_other_dependency(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.OutputPartitions.other_dependency)
  return other_dependency_.Mutable(index);
}
inline ::net_instaweb::InputInfo* OutputPartitions::add_other_dependency() {
  // @@protoc_insertion_point(field_add:net_instaweb.OutputPartitions.other_dependency)
  return other_dependency_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::net_instaweb::InputInfo >*
OutputPartitions::mutable_other_dependency() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.OutputPartitions.other_dependency)
  return &other_dependency_;
}
inline const ::google::protobuf::RepeatedPtrField< ::net_instaweb::InputInfo >&
OutputPartitions::other_dependency() const {
  // @@protoc_insertion_point(field_list:net_instaweb.OutputPartitions.other_dependency)
  return other_dependency_;
}

// repeated string debug_message = 3;
inline int OutputPartitions::debug_message_size() const {
  return debug_message_.size();
}
inline void OutputPartitions::clear_debug_message() {
  debug_message_.Clear();
}
inline const ::std::string& OutputPartitions::debug_message(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.OutputPartitions.debug_message)
  return debug_message_.Get(index);
}
inline ::std::string* OutputPartitions::mutable_debug_message(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.OutputPartitions.debug_message)
  return debug_message_.Mutable(index);
}
inline void OutputPartitions::set_debug_message(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:net_instaweb.OutputPartitions.debug_message)
  debug_message_.Mutable(index)->assign(value);
}
inline void OutputPartitions::set_debug_message(int index, const char* value) {
  debug_message_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:net_instaweb.OutputPartitions.debug_message)
}
inline void OutputPartitions::set_debug_message(int index, const char* value, size_t size) {
  debug_message_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.OutputPartitions.debug_message)
}
inline ::std::string* OutputPartitions::add_debug_message() {
  // @@protoc_insertion_point(field_add_mutable:net_instaweb.OutputPartitions.debug_message)
  return debug_message_.Add();
}
inline void OutputPartitions::add_debug_message(const ::std::string& value) {
  debug_message_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:net_instaweb.OutputPartitions.debug_message)
}
inline void OutputPartitions::add_debug_message(const char* value) {
  debug_message_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:net_instaweb.OutputPartitions.debug_message)
}
inline void OutputPartitions::add_debug_message(const char* value, size_t size) {
  debug_message_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:net_instaweb.OutputPartitions.debug_message)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
OutputPartitions::debug_message() const {
  // @@protoc_insertion_point(field_list:net_instaweb.OutputPartitions.debug_message)
  return debug_message_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
OutputPartitions::mutable_debug_message() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.OutputPartitions.debug_message)
  return &debug_message_;
}

// -------------------------------------------------------------------

// ResourceContext

// optional .net_instaweb.ImageDim desired_image_dims = 1;
inline bool ResourceContext::has_desired_image_dims() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResourceContext::set_has_desired_image_dims() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResourceContext::clear_has_desired_image_dims() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResourceContext::clear_desired_image_dims() {
  if (desired_image_dims_ != NULL) desired_image_dims_->::net_instaweb::ImageDim::Clear();
  clear_has_desired_image_dims();
}
inline const ::net_instaweb::ImageDim& ResourceContext::desired_image_dims() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ResourceContext.desired_image_dims)
  return desired_image_dims_ != NULL ? *desired_image_dims_ : *default_instance_->desired_image_dims_;
}
inline ::net_instaweb::ImageDim* ResourceContext::mutable_desired_image_dims() {
  set_has_desired_image_dims();
  if (desired_image_dims_ == NULL) {
    desired_image_dims_ = new ::net_instaweb::ImageDim;
  }
  // @@protoc_insertion_point(field_mutable:net_instaweb.ResourceContext.desired_image_dims)
  return desired_image_dims_;
}
inline ::net_instaweb::ImageDim* ResourceContext::release_desired_image_dims() {
  // @@protoc_insertion_point(field_release:net_instaweb.ResourceContext.desired_image_dims)
  clear_has_desired_image_dims();
  ::net_instaweb::ImageDim* temp = desired_image_dims_;
  desired_image_dims_ = NULL;
  return temp;
}
inline void ResourceContext::set_allocated_desired_image_dims(::net_instaweb::ImageDim* desired_image_dims) {
  delete desired_image_dims_;
  desired_image_dims_ = desired_image_dims;
  if (desired_image_dims) {
    set_has_desired_image_dims();
  } else {
    clear_has_desired_image_dims();
  }
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.ResourceContext.desired_image_dims)
}

// optional bool inline_images = 3 [default = true];
inline bool ResourceContext::has_inline_images() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResourceContext::set_has_inline_images() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResourceContext::clear_has_inline_images() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResourceContext::clear_inline_images() {
  inline_images_ = true;
  clear_has_inline_images();
}
inline bool ResourceContext::inline_images() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ResourceContext.inline_images)
  return inline_images_;
}
inline void ResourceContext::set_inline_images(bool value) {
  set_has_inline_images();
  inline_images_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ResourceContext.inline_images)
}

// optional bool mobile_user_agent = 4;
inline bool ResourceContext::has_mobile_user_agent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResourceContext::set_has_mobile_user_agent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResourceContext::clear_has_mobile_user_agent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResourceContext::clear_mobile_user_agent() {
  mobile_user_agent_ = false;
  clear_has_mobile_user_agent();
}
inline bool ResourceContext::mobile_user_agent() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ResourceContext.mobile_user_agent)
  return mobile_user_agent_;
}
inline void ResourceContext::set_mobile_user_agent(bool value) {
  set_has_mobile_user_agent();
  mobile_user_agent_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ResourceContext.mobile_user_agent)
}

// optional .net_instaweb.ResourceContext.LibWebpLevel libwebp_level = 5 [default = LIBWEBP_NONE];
inline bool ResourceContext::has_libwebp_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResourceContext::set_has_libwebp_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResourceContext::clear_has_libwebp_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResourceContext::clear_libwebp_level() {
  libwebp_level_ = 0;
  clear_has_libwebp_level();
}
inline ::net_instaweb::ResourceContext_LibWebpLevel ResourceContext::libwebp_level() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ResourceContext.libwebp_level)
  return static_cast< ::net_instaweb::ResourceContext_LibWebpLevel >(libwebp_level_);
}
inline void ResourceContext::set_libwebp_level(::net_instaweb::ResourceContext_LibWebpLevel value) {
  assert(::net_instaweb::ResourceContext_LibWebpLevel_IsValid(value));
  set_has_libwebp_level();
  libwebp_level_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ResourceContext.libwebp_level)
}

// optional bool may_use_small_screen_quality = 7;
inline bool ResourceContext::has_may_use_small_screen_quality() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ResourceContext::set_has_may_use_small_screen_quality() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ResourceContext::clear_has_may_use_small_screen_quality() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ResourceContext::clear_may_use_small_screen_quality() {
  may_use_small_screen_quality_ = false;
  clear_has_may_use_small_screen_quality();
}
inline bool ResourceContext::may_use_small_screen_quality() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ResourceContext.may_use_small_screen_quality)
  return may_use_small_screen_quality_;
}
inline void ResourceContext::set_may_use_small_screen_quality(bool value) {
  set_has_may_use_small_screen_quality();
  may_use_small_screen_quality_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ResourceContext.may_use_small_screen_quality)
}

// optional bool may_use_save_data_quality = 8;
inline bool ResourceContext::has_may_use_save_data_quality() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ResourceContext::set_has_may_use_save_data_quality() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ResourceContext::clear_has_may_use_save_data_quality() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ResourceContext::clear_may_use_save_data_quality() {
  may_use_save_data_quality_ = false;
  clear_has_may_use_save_data_quality();
}
inline bool ResourceContext::may_use_save_data_quality() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ResourceContext.may_use_save_data_quality)
  return may_use_save_data_quality_;
}
inline void ResourceContext::set_may_use_save_data_quality(bool value) {
  set_has_may_use_save_data_quality();
  may_use_save_data_quality_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ResourceContext.may_use_save_data_quality)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace net_instaweb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::net_instaweb::ResourceContext_LibWebpLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::net_instaweb::ResourceContext_LibWebpLevel>() {
  return ::net_instaweb::ResourceContext_LibWebpLevel_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto__INCLUDED
